{{文章戳
|分类=机制
|作者=bWFuanVzYWth
|来源=
|时间=
}}

==传送带相关的重要数据结构==

<!--
1. 线路、节点、chunk、buffer我觉得这四个东西先需要统一的名词解释
2. 术语和专有名词列表
3. 统一用上下游，只在顺序不重要的地方用头尾
4. 用小蓝图和gif来解释特定的例子
-->

===chunk===

每个chunk代表了颜色相同的一段传送带，一条传送带由一个或多个chunk构成。

货物在传送带上的移动速度由chunk的类型决定。

chunk的种类几乎不影响卡顿，但是一条传送带拥有的chunk数量越多卡顿越高。

===buffer===

一条传送带有且仅有一个buffer。buffer是一个uint8数组，储存了传送带上的货物情况，也是传送带的内部更新计算主要发生的地方。

通常来说，数组的长度近似于传送带的物理长度，换算关系约为1米/10元素。但是如果使用一些密铺技巧可以建造出节点间距远超1.8米的传送带，此时每1米的传送带对应的数组元素数量小于10。

buffer的长度越长卡顿越高。

===cargo===

cargo逻辑上代表了一个货物。严格来说，cargo并不是一个专门的数据类型，而是一个长度为10的buffer切片。

cargo切片在buffer数组上的内存移动(memory move)则对应了货物在传送带上的物理移动。

cargo的分布影响了传送带内部更新的过程，因此也会影响卡顿，但是并不是cargo数量越多卡顿越高，这一点会在后文中继续分析。

==传送带的内部更新==

===跳过货物堆积的末段===

===更新顺序===

===多线程影响===

==传送带输出到传送带==

===转弯让直行===

===插入偏移===

虽然传送带通过节点相连，但是插入点并不是节点中心对应的buffer元素，而是对应节点中心向上游方向偏移5buffer元素。

===并带机制（侧面插入）===

这里说的并带指的是T型并带。传送带把货物从侧面插入另一条传送带时，会先尝试引发推挤，推挤让货物可以插入小于一个货物宽度的缝隙。推挤的判定是从插入点向上游不超过2880buffer元素中含有至少10buffer元素的空隙。如果插入成功，被推挤的货物会被向上游方向推挤，并且消除货物之间的空隙。

===环带机制（头部插入）===

<!--TODO 这部分内容需要莳槡帮忙写-->
环带是一种特殊的传送带插入，即传送带的尾部将货物插入自己的头部。环带填满货物后停止，本质上是因为插入失败。

===推挤导致逆流止流===

<!--TODO 这部分内容需要莳槡帮忙写-->

===插入环带头部导致的速度异常===

==传送带输出到其它建筑==
